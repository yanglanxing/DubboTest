plugins {
    id 'java'
    id "io.freefair.lombok" version "5.3.0"
    id 'org.jetbrains.intellij' version '0.6.5'
}

group group
version version

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' }
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile('org.apache.dubbo:dubbo:2.7.3') {
        exclude group: 'org.springframework'
    }
    compile('com.alibaba:fastjson:1.2.75')
    compile 'org.apache.dubbo:dubbo-dependencies-zookeeper:2.7.3'
    compile('org.javassist:javassist:3.20.0-GA')
    compile 'org.apache.commons:commons-lang3:3.11'
    compile 'org.apache.dubbo:dubbo-registry-nacos:2.7.3'
    compile 'com.alibaba.nacos:nacos-client:1.1.1'
    testImplementation(
            'junit:junit:4.13',
            'org.mockito:mockito-core:3.3.3',
            'org.assertj:assertj-core:3.15.0',
            'org.assertj:assertj-swing-junit:3.9.2',
    )
}

lombok {
    version = "1.18.18"
    generateLombokConfig.enabled = false
}

intellij {
    pluginName name
    version ideaVersion
    plugins = ['com.intellij.java']
    // 插件生成的临时文件的地址，可以省略
    sandboxDirectory = project.rootDir.canonicalPath + "/.sandbox"
    updateSinceUntilBuild = true
}

runIde {
    jvmArgs '--add-exports', 'java.base/jdk.internal.vm=ALL-UNNAMED'
}

patchPluginXml {
    version "${project.version}"
    sinceBuild(pluginSinceBuild)
    untilBuild(pluginUntilBuild)
    pluginDescription(file('includes/pluginDescription.html').text)
    changeNotes(file('includes/pluginChanges.html').text)
}

publishPlugin {
    token = System.getenv("publishToken")
    channels publishChannels
}
